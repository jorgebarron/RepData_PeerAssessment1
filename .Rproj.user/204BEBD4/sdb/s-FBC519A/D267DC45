{
    "contents" : "---\ntitle: \"Reproducible Research: Peer Assessment 1\"\noutput: \n  html_document:\n    keep_md: true\n---\n\n```{r}\n#  Load libraries\nlibrary(lattice)\nlibrary(dplyr)\n```\n\n## Loading and preprocessing the data\n```{r}\nstepsData <- read.csv(\"activity/activity.csv\")\nstepsData$date <- as.Date(stepsData$date, format = \"%Y-%m-%d\")\nstepsDataNoNA <- filter(stepsData, !is.na(stepsData[,1]))\n```\n## What is mean total number of steps taken per day?\n```{r}\nstepsByDay <- stepsDataNoNA %>% group_by(date) %>% summarise(sum(steps))\nnames(stepsByDay)[2] <- \"dailySteps\"\nhist(stepsByDay$dailySteps, breaks = 20, main = \"Histogram total steps per day\", xlab = \"Total number of steps taken each day\", col = \"orange\")\n\n# Mean number of steps per day\nmean(stepsByDay$dailySteps)\n# Median number of steps per day\nmedian(stepsByDay$dailySteps)\n```\n## What is the average daily activity pattern?\n```{r}\nstepsByInterval <- stepsDataNoNA %>% group_by(interval) %>% summarise(mean(steps))\nnames(stepsByInterval)[2] <- \"MeanSteps\"\nplot(stepsByInterval$interval, stepsByInterval$MeanSteps, type = \"l\", xlab = \"Interval\", ylab = \"Average steps\", main = \"Average daily activity pattern\", col = \"orange\")\n\n# Which 5-minute interval, on average across all the days in the dataset, contains the maximum number of steps?\nstepsByInterval[max(stepsByInterval$MeanSteps), 1]\n\n```\n\n\n## Imputing missing values\n```{r}\n# Total number of missing values\nsum(is.na(stepsData[,1]))\n\n# Replacing missing values with the average steps for that interval\nstepsReplacedData <- stepsData\nfor (i in 1:nrow(stepsReplacedData)) {\n      row <- stepsReplacedData[i,]\n      if (is.na(row[1,1])) {\n            stepsReplacedData[i, 1] <- (stepsByInterval[stepsByInterval$interval == row[1, 3],2])            \n      }\n}\nstepsByDayReplacedData <- stepsReplacedData %>% group_by(date) %>% summarise(sum(steps))\nnames(stepsByDayReplacedData)[2] <- \"dailySteps\"\nhist(stepsByDayReplacedData$dailySteps, breaks = 20, main = \"Histogram total steps per day replacing missing values\", xlab = \"Total number of steps taken each day\", col = \"orange\")\n\n# Mean total number of steps per day\nmean(stepsByDayReplacedData$dailySteps)\n# Median number of steps per day\nmedian(stepsByDayReplacedData$dailySteps)\n\n```\nThe mean has not changed and media is very close to the value calculated without replacing missing values. This is due to the fact that we have used the mean of each interval to replace them.\n\n## Are there differences in activity patterns between weekdays and weekends?\n```{r}\n# Create a new factor variable with two levels – “weekday” and “weekend”\nwDay <- c(\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\")\nwEnd <- c(\"Sat\", \"Sun\")\nstepsReplacedData$day <- (weekdays(stepsReplacedData$date,  abbreviate = TRUE))\nstepsReplacedData$weekday <- ifelse(stepsReplacedData$day %in% wDay, \"weekday\", \"weekend\")\n\nweekendData <- filter(stepsReplacedData, weekday == \"weekend\") %>% group_by(interval) %>% summarise(meansteps = mean(steps)) %>% mutate(weekday = \"weekend\")\n#need to ask column\nweekdayData <- filter(stepsReplacedData, weekday == \"weekday\") %>% group_by(interval) %>% summarise(meansteps = mean(steps)) %>% mutate(weekday = \"weekday\")\nweekendWeekdayData <- rbind(weekendData, weekdayData)\n\nxyplot(meansteps ~ interval | weekday, data = weekendWeekdayData, layout=c(1,2), type=\"l\")\n```\n",
    "created" : 1421229161884.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2662708678",
    "id" : "D267DC45",
    "lastKnownWriteTime" : 1421313931,
    "path" : "C:/Users/Jorge - work/github-repos/RepData_PeerAssessment1/RepData_PeerAssessment1/PA1_template.Rmd",
    "project_path" : "PA1_template.Rmd",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_markdown"
}