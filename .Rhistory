source("test.R")
source("test.R")
source("test.R")
source("test.R")
source("test.R")
source("test.R")
source("test.R")
source("test.R")
source("test.R")
source("test.R")
source("test.R")
source("test.R")
source("test.R")
stepsData <- read.csv("activity/activity.csv")
stepsData$date <- as.Date(stepsData$date, format = "%Y-%m-%d")
stepsDataNoNA <- filter(stepsData, !is.na(stepsData[,1]))
stepsByDay <- stepsDataNoNA %>% group_by(date) %>% summarise(sum(steps))
names(stepsByDay)[2] <- "dailySteps"
stepsByDay2 <- stepsDataNoNA %>% group_by(date) %>% (sum(steps))
stepsByDay2 <- stepsDataNoNA %>% group_by(date) %>% summarise(sum(steps))
stepsByDay2 <- stepsDataNoNA %>% group_by(date) %>% (sum(steps))
head(stepsDataNoNA)
stepsByDay2 <- stepsDataNoNA %>% group_by(date)
head(stepsByDay2)
?ave
stepsDataNoNA
head(stepsDataNoNA)
stepsDataNoNA$meansteps <- ave(stepsDataNoNA$steps, stepsDataNoNA$interval)
head(stepsDataNoNA)
head(stepsByDay)
stepsByInterval <- stepsDataNoNA %>% group_by(interval) %>% summarise(mean(steps))
head(stepsByInterval)
stepsData <- read.csv("activity/activity.csv")
head(stepsData)
stepsData$meansteps <- ave(stepsData$steps, stepsData$interval)
head(stepsData)
tail(stepsData)
tail(stepsData,500)
Data <- read.csv("activity/activity.csv")
average_steps_each_interval = tapply(data$steps, data$interval, mean)
head(Data)
data <- Data[complete.cases(Data),]
head(data)
total_steps_each_day = tapply(data$steps, data$date, sum)
total_steps_each_day
View(stepsData)
View(stepsData)
View(stepsByInterval)
View(stepsByInterval)
source("test.R")
source("test.R")
stepsData <- read.csv("activity/activity.csv")
stepsData$date <- as.Date(stepsData$date, format = "%Y-%m-%d")
stepsDataNoNA <- filter(stepsData, !is.na(stepsData[,1]))
stepsByDay <- stepsDataNoNA %>% group_by(date) %>% summarise(sum(steps))
names(stepsByDay)[2] <- "dailySteps"
#stepsByDay2 <- stepsDataNoNA %>% group_by(date) %>% (sum(steps))
stepsByInterval <- stepsDataNoNA %>% group_by(interval) %>% summarise(mean(steps))
names(stepsByInterval)[2] <- "MeanSteps"
#head(stepsByDay2)
for (i in 1:nrow(stepsData)) {
row <- stepsData[i,]
if (is.na(row[1])) {
(row[1]) <- (stepsByInterval[stepsByInterval$interval == row[3],2])
}
}
stepsData <- read.csv("activity/activity.csv")
stepsData$date <- as.Date(stepsData$date, format = "%Y-%m-%d")
stepsDataNoNA <- filter(stepsData, !is.na(stepsData[,1]))
stepsByDay <- stepsDataNoNA %>% group_by(date) %>% summarise(sum(steps))
names(stepsByDay)[2] <- "dailySteps"
#stepsByDay2 <- stepsDataNoNA %>% group_by(date) %>% (sum(steps))
stepsByInterval <- stepsDataNoNA %>% group_by(interval) %>% summarise(mean(steps))
names(stepsByInterval)[2] <- "MeanSteps"
#head(stepsByDay2)
for (i in 1:nrow(stepsData)) {
row <- stepsData[i,]
if (is.na(row[1])) {
(row[1]) <- (stepsByInterval[stepsByInterval$interval == row[3],2])
}
}
stepsByInterval$interval[3]
stepsByInterval$interval[2]
stepsByInterval[stepsByInterval$interval == 10, 2]
for (i in 1:nrow(stepsData)) {
row <- stepsData[i,]
print(row[1])
print(row[3])
#      if (is.na(row[1])) {
#            (row[1]) <- (stepsByInterval[stepsByInterval$interval == row[3],2])
#      }
}
stepsData <- read.csv("activity/activity.csv")
stepsData$date <- as.Date(stepsData$date, format = "%Y-%m-%d")
stepsDataNoNA <- filter(stepsData, !is.na(stepsData[,1]))
stepsByDay <- stepsDataNoNA %>% group_by(date) %>% summarise(sum(steps))
names(stepsByDay)[2] <- "dailySteps"
#stepsByDay2 <- stepsDataNoNA %>% group_by(date) %>% (sum(steps))
stepsByInterval <- stepsDataNoNA %>% group_by(interval) %>% summarise(mean(steps))
names(stepsByInterval)[2] <- "MeanSteps"
View(stepsByInterval)
#head(stepsByDay2)
for (i in 1:nrow(stepsData)) {
row <- stepsData[i,]
#print(row[1])
#print(row[3])
if (is.na(row[1])) {
print(stepsByInterval[stepsByInterval$interval == row[3],2])
#(row[1]) <- (stepsByInterval[stepsByInterval$interval == row[3],2])
}
}
View(stepsByInterval)
for (i in 1:nrow(stepsData)) {
row <- stepsData[i,]
#print(row[1])
#print(row[3])
if (is.na(row[1])) {
#            print(stepsByInterval[stepsByInterval$interval == row[3],2])
(row[1]) <- (stepsByInterval[stepsByInterval$interval == row[3],2])
}
}
for (i in 1:nrow(stepsData)) {
row <- stepsData[i,]
#print(row[1])
#print(row[3])
if (is.na(row[1])) {
#            print(stepsByInterval[stepsByInterval$interval == row[3],2])
row[1] <- (stepsByInterval[stepsByInterval$interval == row[3],2])
}
}
stepsData <- read.csv("activity/activity.csv")
stepsData$date <- as.Date(stepsData$date, format = "%Y-%m-%d")
stepsDataNoNA <- filter(stepsData, !is.na(stepsData[,1]))
stepsByDay <- stepsDataNoNA %>% group_by(date) %>% summarise(sum(steps))
names(stepsByDay)[2] <- "dailySteps"
#stepsByDay2 <- stepsDataNoNA %>% group_by(date) %>% (sum(steps))
stepsByInterval <- stepsDataNoNA %>% group_by(interval) %>% summarise(mean(steps))
names(stepsByInterval)[2] <- "MeanSteps"
#head(stepsByDay2)
for (i in 1:nrow(stepsData)) {
row <- stepsData[i,]
#print(row[1])
#print(row[3])
if (is.na(row[1])) {
#            print(stepsByInterval[stepsByInterval$interval == row[3],2])
stepsData[i, 1] <- (stepsByInterval[stepsByInterval$interval == row[3],2])
}
}
print(stepsByInterval[stepsByInterval$interval == row[3],2])
stepsData <- read.csv("activity/activity.csv")
stepsData$date <- as.Date(stepsData$date, format = "%Y-%m-%d")
stepsDataNoNA <- filter(stepsData, !is.na(stepsData[,1]))
stepsByDay <- stepsDataNoNA %>% group_by(date) %>% summarise(sum(steps))
names(stepsByDay)[2] <- "dailySteps"
#stepsByDay2 <- stepsDataNoNA %>% group_by(date) %>% (sum(steps))
stepsByInterval <- stepsDataNoNA %>% group_by(interval) %>% summarise(mean(steps))
names(stepsByInterval)[2] <- "MeanSteps"
#head(stepsByDay2)
#nrow(stepsData
for (i in 1:5)) {
row <- stepsData[i,]
#print(row[1])
#print(row[3])
if (is.na(row[1])) {
print(stepsByInterval[stepsByInterval$interval == row[3],2])
#            stepsData[i, 1] <- (stepsByInterval[stepsByInterval$interval == row[3],2])
}
}
#nrow(stepsData
for (i in 1:5) {
row <- stepsData[i,]
#print(row[1])
#print(row[3])
if (is.na(row[1])) {
print(stepsByInterval[stepsByInterval$interval == row[3],2])
#            stepsData[i, 1] <- (stepsByInterval[stepsByInterval$interval == row[3],2])
}
}
#nrow(stepsData
for (i in 1:1) {
row <- stepsData[i,]
#print(row[1])
#print(row[3])
if (is.na(row[1])) {
print(stepsByInterval[stepsByInterval$interval == row[3],2])
#            stepsData[i, 1] <- (stepsByInterval[stepsByInterval$interval == row[3],2])
}
}
for (i in 1:1) {
row <- stepsData[i,]
print(row)
#print(row[3])
if (is.na(row[1])) {
print(stepsByInterval[stepsByInterval$interval == row[3],2])
#            stepsData[i, 1] <- (stepsByInterval[stepsByInterval$interval == row[3],2])
}
}
print(stepsByInterval[stepsByInterval$interval == row[3],2])
print(stepsByInterval[stepsByInterval$interval == 10,2])
print(stepsByInterval[stepsByInterval$interval == 0,2])
row[3]
class(row[3])
str(row)
intervalo <- row[3]
class(intervalo)
print(stepsByInterval[stepsByInterval$interval == intervalo,2])
dim(intervalo)
stepsData[i, 1] <- (stepsByInterval[stepsByInterval$interval == row[1,3],2])
(stepsByInterval[stepsByInterval$interval == row[1,3],2])
stepsData <- read.csv("activity/activity.csv")
stepsData$date <- as.Date(stepsData$date, format = "%Y-%m-%d")
stepsDataNoNA <- filter(stepsData, !is.na(stepsData[,1]))
stepsByDay <- stepsDataNoNA %>% group_by(date) %>% summarise(sum(steps))
names(stepsByDay)[2] <- "dailySteps"
#stepsByDay2 <- stepsDataNoNA %>% group_by(date) %>% (sum(steps))
stepsByInterval <- stepsDataNoNA %>% group_by(interval) %>% summarise(mean(steps))
names(stepsByInterval)[2] <- "MeanSteps"
#head(stepsByDay2)
#nrow(stepsData
for (i in 1:1) {
row <- stepsData[i,]
print(row)
#print(row[3])
if (is.na(row[1,1])) {
print(stepsByInterval[stepsByInterval$interval == row[1, 3],2])
#            stepsData[i, 1] <- (stepsByInterval[stepsByInterval$interval == row[3],2])
}
}
for (i in 1:1) {
row <- stepsData[i,]
print(row)
#print(row[3])
if (is.na(row[1,1])) {
#            print(stepsByInterval[stepsByInterval$interval == row[1, 3],2])
stepsData[i, 1] <- (stepsByInterval[stepsByInterval$interval == row[1, 3],2])
}
}
head(stepsData)
stepsData <- read.csv("activity/activity.csv")
stepsData$date <- as.Date(stepsData$date, format = "%Y-%m-%d")
stepsDataNoNA <- filter(stepsData, !is.na(stepsData[,1]))
stepsByDay <- stepsDataNoNA %>% group_by(date) %>% summarise(sum(steps))
names(stepsByDay)[2] <- "dailySteps"
#stepsByDay2 <- stepsDataNoNA %>% group_by(date) %>% (sum(steps))
stepsByInterval <- stepsDataNoNA %>% group_by(interval) %>% summarise(mean(steps))
names(stepsByInterval)[2] <- "MeanSteps"
#head(stepsByDay2)
#nrow(stepsData
for (i in nrow(stepsData)) {
row <- stepsData[i,]
#print(row)
#print(row[3])
if (is.na(row[1,1])) {
#            print(stepsByInterval[stepsByInterval$interval == row[1, 3],2])
stepsData[i, 1] <- (stepsByInterval[stepsByInterval$interval == row[1, 3],2])
}
}
head(stepsData)
for (i in 1:nrow(stepsData)) {
row <- stepsData[i,]
#print(row)
#print(row[3])
if (is.na(row[1,1])) {
#            print(stepsByInterval[stepsByInterval$interval == row[1, 3],2])
stepsData[i, 1] <- (stepsByInterval[stepsByInterval$interval == row[1, 3],2])
}
}
head(stepsData)
stepsData2 <- stepsData
stepsData <- read.csv("activity/activity.csv")
stepsData2[is.na(stepsData2[,1])]
sum(is.na(stepsData2$steps))
sum(is.na(stepsData1$steps))
sum(is.na(stepsData$steps))
stepsData[2000,]
stepsData[6000,]
stepsData[8000,]
stepsData[9000,]
stepsData[8700,]
stepsData[8850,]
stepsData[8880,]
stepsData[8890,]
stepsData[8904,]
stepsData[8924,]
stepsData[8934,]
stepsData[8928:8933,]
stepsData2[8928:8933,]
weekday(stepsData[3,2])
weekdays(stepsData[3,2])
str(stepsByDayReplacedData)
stepsData <- read.csv("activity/activity.csv")
head(stepsData,3)
stepsData$date <- as.Date(stepsData$date, format = "%Y-%m-%d")
stepsDataNoNA <- filter(stepsData, !is.na(stepsData[,1]))
head(stepsDataNoNA,3)
str(stepsDataNoNA)
```
## What is mean total number of steps taken per day?
```{r}
stepsByDay <- stepsDataNoNA %>% group_by(date) %>% summarise(sum(steps))
names(stepsByDay)[2] <- "dailySteps"
hist(stepsByDay$dailySteps, breaks = 20, main = "Histogram total steps per day", xlab = "Total number of steps taken each day", col = "orange")
# Mean and Median total number of steps per day
mean(stepsByDay$dailySteps)
median(stepsByDay$dailySteps)
stepsByInterval <- stepsDataNoNA %>% group_by(interval) %>% summarise(mean(steps))
names(stepsByInterval)[2] <- "MeanSteps"
plot(stepsByInterval$interval, stepsByInterval$MeanSteps, type = "l", xlab = "Interval", ylab = "Average steps", main = "Average daily activity pattern", col = "orange")
# Which 5-minute interval, on average across all the days in the dataset, contains the maximum number of steps?
stepsByInterval[max(stepsByInterval$MeanSteps), 1]
sum(is.na(stepsData[,1]))
# Replacing missing values with the average steps for that interval
stepsReplacedData <- stepsData
for (i in 1:nrow(stepsReplacedData)) {
row <- stepsReplacedData[i,]
if (is.na(row[1,1])) {
stepsReplacedData[i, 1] <- (stepsByInterval[stepsByInterval$interval == row[1, 3],2])
}
}
stepsByDayReplacedData <- stepsReplacedData %>% group_by(date) %>% summarise(sum(steps))
names(stepsByDayReplacedData)[2] <- "dailySteps"
hist(stepsByDayReplacedData$dailySteps, breaks = 20, main = "Histogram total steps per day replacing missing values", xlab = "Total number of steps taken each day", col = "orange")
# Mean and Median total number of steps per day
mean(stepsByDayReplacedData$dailySteps)
median(stepsByDayReplacedData$dailySteps)
weekdays(stepsByDayReplacedData[3,2])
str(stepsByDayReplacedData)
weekdays(stepsReplacedData[3,2])
weekdays(stepsReplacedData[1113,2])
weekdays(stepsReplacedData[1313,2])
?weekdays
weekdays(stepsReplacedData[1313,2], true)
weekdays(stepsReplacedData[1313,2], TRUE)
wDay <- c("Mon", "Tue", "Wed", "Thu", "Fri")
wEnd <- c("Sat", "Sun")
View(stepsReplacedData)
View(stepsReplacedData)
stepsReplacedData$weekday <- ifelse(weekdays(stepsReplacedData$date) %in% wDay, "weekday", "weekend")
head(steps)
head(stepsByDayReplacedData)
head(stepsReplacedData)
stepsReplacedData$weekday <- ifelse(weekdays(stepsReplacedData$date, abbreviate) %in% wDay, "weekday", "weekend")
stepsReplacedData$weekday <- ifelse(weekdays(stepsReplacedData$date, abbreviate) %in% wDay, "weekday", "weekend")
stepsReplacedData <- stepsData
for (i in 1:nrow(stepsReplacedData)) {
row <- stepsReplacedData[i,]
if (is.na(row[1,1])) {
stepsReplacedData[i, 1] <- (stepsByInterval[stepsByInterval$interval == row[1, 3],2])
}
}
stepsReplacedData$weekday <- ifelse(weekdays(stepsReplacedData$date, abbreviate) %in% wDay, "weekday", "weekend")
head(stepsReplacedData)
stepsReplacedData$weekday <- (weekdays(stepsReplacedData$date, abbreviate))
weekdays(stepsReplacedData$date, abbreviate)
weekdays(stepsReplacedData$date[1], abbreviate)
stepsReplacedData$date[1]
weekdays(stepsReplacedData$date[1])
weekdays(stepsReplacedData$date[1], abbreviate)
weekdays(stepsReplacedData$date[1], abbreviate = FALSE)
weekdays(stepsReplacedData$date[1], abbreviate = TRUE)
stepsReplacedData$weekday <- (weekdays(stepsReplacedData$date,  abbreviate = TRUE))
head(stepsReplacedData)
tail(stepsReplacedData)
stepsReplacedData$day <- (weekdays(stepsReplacedData$date,  abbreviate = TRUE))
stepsReplacedData$weekday <- ifelse(weekdays(stepsReplacedData$date, abbreviate) %in% wDay, "weekday", "weekend")
head(stepsReplacedData)
stepsReplacedData <- stepsData
for (i in 1:nrow(stepsReplacedData)) {
row <- stepsReplacedData[i,]
if (is.na(row[1,1])) {
stepsReplacedData[i, 1] <- (stepsByInterval[stepsByInterval$interval == row[1, 3],2])
}
}
stepsByDayReplacedData <- stepsReplacedData %>% group_by(date) %>% summarise(sum(steps))
names(stepsByDayReplacedData)[2] <- "dailySteps"
hist(stepsByDayReplacedData$dailySteps, breaks = 20, main = "Histogram total steps per day replacing missing values", xlab = "Total number of steps taken each day", col = "orange")
# Mean and Median total number of steps per day
mean(stepsByDayReplacedData$dailySteps)
median(stepsByDayReplacedData$dailySteps)
```
## Are there differences in activity patterns between weekdays and weekends?
```{r}
# Create a new factor variable with two levels – “weekday” and “weekend”
wDay <- c("Mon", "Tue", "Wed", "Thu", "Fri")
wEnd <- c("Sat", "Sun")
stepsReplacedData$day <- (weekdays(stepsReplacedData$date,  abbreviate = TRUE))
head(stepsReplacedData)
stepsReplacedData$weekday <- ifelse(stepsReplacedData$day %in% wDay, "weekday", "weekend")
head(stepsReplacedData)
stepsReplacedData[2222:2226,]
stepsReplacedData[2022:2026,]
stepsReplacedData[2002:2026,]
stepsReplacedData <- stepsData
for (i in 1:nrow(stepsReplacedData)) {
row <- stepsReplacedData[i,]
if (is.na(row[1,1])) {
stepsReplacedData[i, 1] <- (stepsByInterval[stepsByInterval$interval == row[1, 3],2])
}
}
stepsByDayReplacedData <- stepsReplacedData %>% group_by(date) %>% summarise(sum(steps))
names(stepsByDayReplacedData)[2] <- "dailySteps"
hist(stepsByDayReplacedData$dailySteps, breaks = 20, main = "Histogram total steps per day replacing missing values", xlab = "Total number of steps taken each day", col = "orange")
# Mean and Median total number of steps per day
mean(stepsByDayReplacedData$dailySteps)
median(stepsByDayReplacedData$dailySteps)
```
## Are there differences in activity patterns between weekdays and weekends?
```{r}
# Create a new factor variable with two levels – “weekday” and “weekend”
wDay <- c("Mon", "Tue", "Wed", "Thu", "Fri")
wEnd <- c("Sat", "Sun")
stepsReplacedData$day <- (weekdays(stepsReplacedData$date,  abbreviate = TRUE))
stepsReplacedData$weekday <- ifelse(stepsReplacedData$day %in% wDay, "weekday", "weekend")
head(stepsReplacedData)
filter(stepsReplacedData, weekday = "weekend")
library(dplyr)
library(ggplot2)
filter(stepsReplacedData, weekday == "weekend")
head(filter(stepsReplacedData, weekday == "weekend"))
weekendData <- filter(stepsReplacedData, weekday == "weekend") %>% group_by(interval) %>% summarise(sum(steps))
head(weekendData)
tail(weekendData)
plot(weekendData$interval, weekendData$sum(steps), type = "l", xlab = "Interval", ylab = "Average steps", main = "Average daily activity pattern", col = "orange")
weekendData <- filter(stepsReplacedData, weekday == "weekend") %>% group_by(interval) %>% summarise(sum(steps))
names(weekendData)[2] <- "steps"
plot(weekendData$interval, weekendData$steps, type = "l", xlab = "Interval", ylab = "Average steps", main = "Average daily activity pattern", col = "orange")
weekendData <- filter(stepsReplacedData, weekday == "weekend") %>% group_by(interval) %>% summarise(sum(steps))
names(weekendData)[2] <- "steps"
plot(weekendData$interval, weekendData$steps, type = "l", xlab = "Interval", ylab = "Average steps", main = "Average daily activity pattern", col = "orange")
weekdayData <- filter(stepsReplacedData, weekday == "weekday") %>% group_by(interval) %>% summarise(sum(steps))
names(weekdayData)[2] <- "steps"
plot(weekdayData$interval, weekdayData$steps, type = "l", xlab = "Interval", ylab = "Average steps", main = "Average daily activity pattern", col = "blue")
weekendData <- filter(stepsReplacedData, weekday == "weekend") %>% group_by(interval) %>% summarise(sum(steps))
names(weekendData)[2] <- "steps"
weekdayData <- filter(stepsReplacedData, weekday == "weekday") %>% group_by(interval) %>% summarise(sum(steps))
names(weekdayData)[2] <- "steps"
par(mfrow = c(1, 2))
plot(weekdayData$interval, weekdayData$steps, type = "l", xlab = "Interval", ylab = "Average steps", main = "Average daily activity pattern", col = "blue")
plot(weekendData$interval, weekendData$steps, type = "l", xlab = "Interval", ylab = "Average steps", main = "Average daily activity pattern", col = "orange")
weekendData <- filter(stepsReplacedData, weekday == "weekend") %>% group_by(interval) %>% summarise(sum(steps))
names(weekendData)[2] <- "steps"
weekdayData <- filter(stepsReplacedData, weekday == "weekday") %>% group_by(interval) %>% summarise(sum(steps))
names(weekdayData)[2] <- "steps"
par(mfrow = c(2, 1))
plot(weekdayData$interval, weekdayData$steps, type = "l", xlab = "Interval", ylab = "Average steps", main = "Average daily activity pattern", col = "blue")
plot(weekendData$interval, weekendData$steps, type = "l", xlab = "Interval", ylab = "Average steps", main = "Average daily activity pattern", col = "orange")
weekendData <- filter(stepsReplacedData, weekday == "weekend") %>% group_by(interval) %>% summarise(sum(steps))
names(weekendData)[2] <- "steps"
weekdayData <- filter(stepsReplacedData, weekday == "weekday") %>% group_by(interval) %>% summarise(sum(steps))
names(weekdayData)[2] <- "steps"
par(mfrow = c(2, 1))
plot(weekdayData$interval, weekdayData$steps, type = "l", xlab = "Interval", ylab = "Average steps", main = "Weekday", col = "blue")
plot(weekendData$interval, weekendData$steps, type = "l", xlab = "Interval", ylab = "Average steps", main = "Weekend", col = "orange")
names(weekdayData)[2] <- "steps"
par(mfrow = c(2, 1), mar = c(2, 2, 2, 1))
plot(weekdayData$interval, weekdayData$steps, type = "l", xlab = "Interval", ylab = "Average steps", main = "Weekday", col = "blue")
plot(weekendData$interval, weekendData$steps, type = "l", xlab = "Interval", ylab = "Average steps", main = "Weekend", col = "orange")
par(mfrow = c(2, 1), mar = c(3, 3, 2, 1))
plot(weekdayData$interval, weekdayData$steps, type = "l", xlab = "Interval", ylab = "Average steps", main = "Weekday", col = "blue")
plot(weekendData$interval, weekendData$steps, type = "l", xlab = "Interval", ylab = "Average steps", main = "Weekend", col = "orange")
weekendData <- filter(stepsReplacedData, weekday == "weekend") %>% group_by(interval) %>% summarise(sum(steps))
head(stepsReplacedData)
library(lattice)
xyplot(interval ~ steps | weekday, data = stepsReplacedData)
xyplot(interval ~ steps | weekday, data = stepsReplacedData, layout=c(2,1))
xyplot(interval ~ steps | weekday, data = stepsReplacedData, layout=c(2,1))
xyplot(interval ~ steps | weekday, data = stepsReplacedData, layout=c(1,2))
xyplot(steps ~ interval | weekday, data = stepsReplacedData, layout=c(1,2))
xyplot(steps ~ interval | weekday, data = stepsReplacedData, layout=c(1,2), type="l")
wDay <- c("Mon", "Tue", "Wed", "Thu", "Fri")
wEnd <- c("Sat", "Sun")
stepsReplacedData$day <- (weekdays(stepsReplacedData$date,  abbreviate = TRUE))
stepsReplacedData$weekday <- ifelse(stepsReplacedData$day %in% wDay, "weekday", "weekend")
weekendData <- filter(stepsReplacedData, weekday == "weekend") %>% group_by(interval) %>% summarise(sum(steps))
weekdayData <- filter(stepsReplacedData, weekday == "weekday") %>% group_by(interval) %>% summarise(sum(steps))
head(weekdayData)
?join
library(dplyr)
?join
a <- join(weekdayData, weekendData)
?merge
a <- merge(weekdayData, weekendData)
head(a)
str(a)
summary(a)
a <- cbind(weekdayData, weekendData)
head(a)
a <- rbind(weekdayData, weekendData)
head(a)
str(a)
weekendData <- filter(stepsReplacedData, weekday == "weekend") %>% group_by(interval) %>% summarise(meansteps = mean(steps))
head(weekendData)
weekdayData <- filter(stepsReplacedData, weekday == "weekday") %>% group_by(interval) %>% summarise(meansteps = mean(steps))
weekendData <- filter(stepsReplacedData, weekday == "weekend") %>% group_by(interval) %>% summarise(meansteps = mean(steps), weekday)
weekendData <- filter(stepsReplacedData, weekday == "weekend") %>% group_by(interval) %>% summarise(meansteps = mean(steps)
weekendData <- filter(stepsReplacedData, weekday == "weekend") %>% group_by(interval) %>% summarise(meansteps = mean(steps))
weekdayData <- filter(stepsReplacedData, weekday == "weekday") %>% group_by(interval) %>% summarise(meansteps = mean(steps), weekday)
weekendData <- filter(stepsReplacedData, weekday == "weekend") %>% group_by(interval) %>% summarise(meansteps = mean(steps))
head(weekendData)
weekendData <- filter(stepsReplacedData, weekday == "weekend") %>% group_by(interval) %>% summarise(meansteps = mean(steps),  weekday = n_distinct(weekday))
head(weekendData)
weekendData <- filter(stepsReplacedData, weekday == "weekend") %>% group_by(interval) %>% summarise(meansteps = mean(steps),  weekday = (weekday))
weekendData <- filter(stepsReplacedData, weekday == "weekend") %>% group_by(interval) %>% summarise(meansteps = mean(steps)) %>$ weekday = "weekend"
weekendData <- filter(stepsReplacedData, weekday == "weekend") %>% group_by(interval) %>% summarise(meansteps = mean(steps)) %>% weekday = "weekend"
weekendData <- filter(stepsReplacedData, weekday == "weekend") %>% group_by(interval) %>% summarise(meansteps = mean(steps)) %>% mutate(weekday = "weekend")
head(weekendData)
weekdayData <- filter(stepsReplacedData, weekday == "weekday") %>% group_by(interval) %>% summarise(meansteps = mean(steps)) %>% mutate(weekday = "weekday")
weekendWeekdayData <- rbind(weekendData, weekdayData)
head(weekendWeekdayData)
tail(weekendWeekdayData)
xyplot(steps ~ interval | weekday, data = weekendWeekdayData, layout=c(1,2), type="l")
xyplot(meansteps ~ interval | weekday, data = weekendWeekdayData, layout=c(1,2), type="l")
